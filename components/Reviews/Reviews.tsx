/**
 * This code was generated by Builder.io.
 */
import React from "react";
import StarRating from "./StarRating";
import ReviewBar from "./ReviewBar";
import ReviewItem from "./ReviewItem";

export interface ReviewsProps {
  overallRating: number;
  totalReviews: number;
  ratingDistribution: { [key: number]: number };
  reviews: Array<{
    name: string;
    date: string;
    rating: number;
    comment: string;
  }>;
}

const Reviews: React.FC<ReviewsProps> = ({
  overallRating,
  totalReviews,
  ratingDistribution,
  reviews,
}) => {
  return (
    <section className="box-border flex relative flex-col shrink-0">
      <header className="px-4 pt-5 pb-3 w-full text-2xl font-bold leading-none whitespace-nowrap text-stone-900 max-md:max-w-full">
        Reviews
      </header>
      <div className="flex flex-wrap gap-6 items-start p-4 w-full max-md:max-w-full">
        <div className="flex flex-col min-h-[153px] w-[98px]">
          <div className="text-4xl font-bold tracking-tighter leading-none whitespace-nowrap text-stone-900 w-[98px]">
            {overallRating}
          </div>
          <StarRating rating={overallRating} />
          <div className="mt-2 text-base text-stone-900 w-[98px]">
            {totalReviews} {totalReviews === 1 ? "review" : "reviews"}
          </div>
        </div>
        <div className="flex flex-col flex-1 shrink basis-0 max-w-[400px] min-w-[200px]">
          {[5, 4, 3, 2, 1].map((rating) => (
            <ReviewBar
              key={rating}
              rating={rating}
              percentage={ratingDistribution[rating] || 0}
            />
          ))}
        </div>
      </div>
      {reviews.map((review, index) => (
        <ReviewItem key={index} {...review} />
      ))}
    </section>
  );
};

export default Reviews;
